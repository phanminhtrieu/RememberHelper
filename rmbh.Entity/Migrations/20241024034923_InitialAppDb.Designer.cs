// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using rmbh.Entity;

#nullable disable

namespace rmbh.Entity.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241024034923_InitialAppDb")]
    partial class InitialAppDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.35")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("rmbh.Entity.Entities.Manipulation.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Answer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnswerClarifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnswerFootnote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("AsnImg")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeckId")
                        .HasColumnType("int");

                    b.Property<int>("MasteryScore")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Question")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionClarifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionFootnote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("QuestionImg")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DeckId");

                    b.ToTable("Cards", (string)null);
                });

            modelBuilder.Entity("rmbh.Entity.Entities.Manipulation.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DefaultStudyMixType")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionAbout")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeadlineAbout")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Logo")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Visibility")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Classes", (string)null);
                });

            modelBuilder.Entity("rmbh.Entity.Entities.Manipulation.Deck", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Objective")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.ToTable("Decks", (string)null);
                });

            modelBuilder.Entity("rmbh.Entity.Entities.Manipulation.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<byte[]>("Avatar")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Teams", (string)null);
                });

            modelBuilder.Entity("rmbh.Entity.Entities.Manipulation.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Avatar")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Bio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("SchoolName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("701e1774-9993-44fe-b377-aae0f51e0231"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "trieu@gmail.com",
                            FirstName = "Phan",
                            LastName = "Minh Trieu",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "123456",
                            Role = 1
                        },
                        new
                        {
                            Id = new Guid("9c0de9d9-1022-419e-9828-e8c7cc6e77c7"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "van@gmail.com",
                            FirstName = "Nguyen",
                            LastName = "Ngoc Khanh Van",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "123456",
                            Role = 1
                        },
                        new
                        {
                            Id = new Guid("0a647a8e-eeaf-4d96-8263-566cb883c994"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "hoa@gmail.com",
                            FirstName = "Pham",
                            LastName = "Minh Hoa",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "123456",
                            Role = 1
                        },
                        new
                        {
                            Id = new Guid("4b6519a1-21ae-44b7-874a-0da82c60ad59"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "duc@gmail.com",
                            FirstName = "Pham",
                            LastName = "Van Duc",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "123456",
                            Role = 2
                        },
                        new
                        {
                            Id = new Guid("b2e1073e-5c78-4bbf-9a23-0d3a799a4f81"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "vana@gmail.com",
                            FirstName = "Nguyen",
                            LastName = "Van A",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "123456",
                            Role = 2
                        },
                        new
                        {
                            Id = new Guid("d5c1b63d-cd34-47a6-9d18-9b0c5e457d2f"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "thib@gmail.com",
                            FirstName = "Tran",
                            LastName = "Thi B",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "123456",
                            Role = 2
                        },
                        new
                        {
                            Id = new Guid("9b12349d-16b4-43fc-945c-b1632f0bcbb1"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "tranv@gmail.com",
                            FirstName = "Tran",
                            LastName = "Van C",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "123456",
                            Role = 2
                        },
                        new
                        {
                            Id = new Guid("f12b876c-0e2d-4d39-b878-4d5b45e93557"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "lehoang@gmail.com",
                            FirstName = "Le",
                            LastName = "Hoang D",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "123456",
                            Role = 2
                        },
                        new
                        {
                            Id = new Guid("22c115dd-c912-4fb2-8d57-037d89e4b5e4"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "phamngoc@gmail.com",
                            FirstName = "Pham",
                            LastName = "Ngoc E",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "123456",
                            Role = 2
                        },
                        new
                        {
                            Id = new Guid("5e5a20e3-3a49-48fc-8e7a-14d476403e94"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "nguyenkim@gmail.com",
                            FirstName = "Nguyen",
                            LastName = "Kim F",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "123456",
                            Role = 2
                        },
                        new
                        {
                            Id = new Guid("ff127b02-7f94-4ebd-8d99-91e69f4ab6ba"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "truongtuan@gmail.com",
                            FirstName = "Truong",
                            LastName = "Tuan G",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "123456",
                            Role = 2
                        },
                        new
                        {
                            Id = new Guid("3d1f9f41-8ac9-4c36-b85f-bcbe68d0f58c"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "vominh@gmail.com",
                            FirstName = "Vo",
                            LastName = "Minh H",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "123456",
                            Role = 2
                        },
                        new
                        {
                            Id = new Guid("f8d170a5-02f7-4ff4-8c12-4eb83451fcd6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "lamthanh@gmail.com",
                            FirstName = "Lam",
                            LastName = "Thanh I",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "123456",
                            Role = 2
                        },
                        new
                        {
                            Id = new Guid("7d3e98b2-8825-476e-b230-63a7d8d6500b"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ngochai@gmail.com",
                            FirstName = "Ngo",
                            LastName = "Hai J",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "123456",
                            Role = 2
                        },
                        new
                        {
                            Id = new Guid("139fcb97-bd85-4ee0-9849-cb77aeaa67da"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "phamnhung@gmail.com",
                            FirstName = "Pham",
                            LastName = "Nhung K",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "123456",
                            Role = 2
                        },
                        new
                        {
                            Id = new Guid("2a9ffb7d-89fd-4784-b7eb-1a1245d30ae6"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "doviet@gmail.com",
                            FirstName = "Do",
                            LastName = "Viet L",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "123456",
                            Role = 2
                        },
                        new
                        {
                            Id = new Guid("5afbead9-e4a2-4e34-8eb9-ec9989ac31b5"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "leminh@gmail.com",
                            FirstName = "Le",
                            LastName = "Minh M",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "123456",
                            Role = 2
                        },
                        new
                        {
                            Id = new Guid("8ad18a18-2e0a-44a3-8898-ff2da1e6e6a4"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "dangquan@gmail.com",
                            FirstName = "Dang",
                            LastName = "Quan N",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "123456",
                            Role = 2
                        },
                        new
                        {
                            Id = new Guid("995dd243-3d72-44fc-b8f6-dfe9b1f4abaf"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "buihieu@gmail.com",
                            FirstName = "Bui",
                            LastName = "Hieu O",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "123456",
                            Role = 2
                        },
                        new
                        {
                            Id = new Guid("bb7be635-3f9e-4af2-96d1-f232a717b39e"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "truonganh@gmail.com",
                            FirstName = "Truong",
                            LastName = "Anh P",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "123456",
                            Role = 2
                        },
                        new
                        {
                            Id = new Guid("cb00a417-417f-4d69-9ad1-e9c04e4f3d11"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "danghoa@gmail.com",
                            FirstName = "Dang",
                            LastName = "Hoa Q",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "123456",
                            Role = 2
                        },
                        new
                        {
                            Id = new Guid("deb20833-0427-4520-b0b9-2916b5d42d91"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ngothanh@gmail.com",
                            FirstName = "Ngo",
                            LastName = "Thanh R",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "123456",
                            Role = 2
                        },
                        new
                        {
                            Id = new Guid("1b8df37b-80cf-4182-8cc9-12de166b46e2"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "phuocnam@gmail.com",
                            FirstName = "Phuoc",
                            LastName = "Nam S",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "123456",
                            Role = 2
                        },
                        new
                        {
                            Id = new Guid("237b98a8-9d2c-4dd7-8058-06a7c4909a6d"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "lehong@gmail.com",
                            FirstName = "Le",
                            LastName = "Hong T",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "123456",
                            Role = 2
                        },
                        new
                        {
                            Id = new Guid("c876965b-b849-4f4b-b1ae-4c78e5f9b3df"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "nguyenanh@gmail.com",
                            FirstName = "Nguyen",
                            LastName = "Anh U",
                            ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Password = "123456",
                            Role = 2
                        });
                });

            modelBuilder.Entity("rmbh.Entity.Entities.Manipulation.UserClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("UserId");

                    b.ToTable("UserClasses", (string)null);
                });

            modelBuilder.Entity("rmbh.Entity.Entities.Manipulation.UserTeam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("JoinedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.HasIndex("UserId");

                    b.ToTable("UserTeams", (string)null);
                });

            modelBuilder.Entity("rmbh.Entity.Entities.Manipulation.Card", b =>
                {
                    b.HasOne("rmbh.Entity.Entities.Manipulation.Deck", "Deck")
                        .WithMany("Cards")
                        .HasForeignKey("DeckId");

                    b.Navigation("Deck");
                });

            modelBuilder.Entity("rmbh.Entity.Entities.Manipulation.Deck", b =>
                {
                    b.HasOne("rmbh.Entity.Entities.Manipulation.Class", "Class")
                        .WithMany("Decks")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");
                });

            modelBuilder.Entity("rmbh.Entity.Entities.Manipulation.UserClass", b =>
                {
                    b.HasOne("rmbh.Entity.Entities.Manipulation.Class", "Class")
                        .WithMany("UserClasses")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("rmbh.Entity.Entities.Manipulation.User", "User")
                        .WithMany("UserClasses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("User");
                });

            modelBuilder.Entity("rmbh.Entity.Entities.Manipulation.UserTeam", b =>
                {
                    b.HasOne("rmbh.Entity.Entities.Manipulation.Team", "Team")
                        .WithMany("UserTeams")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("rmbh.Entity.Entities.Manipulation.User", "User")
                        .WithMany("UserTeams")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");

                    b.Navigation("User");
                });

            modelBuilder.Entity("rmbh.Entity.Entities.Manipulation.Class", b =>
                {
                    b.Navigation("Decks");

                    b.Navigation("UserClasses");
                });

            modelBuilder.Entity("rmbh.Entity.Entities.Manipulation.Deck", b =>
                {
                    b.Navigation("Cards");
                });

            modelBuilder.Entity("rmbh.Entity.Entities.Manipulation.Team", b =>
                {
                    b.Navigation("UserTeams");
                });

            modelBuilder.Entity("rmbh.Entity.Entities.Manipulation.User", b =>
                {
                    b.Navigation("UserClasses");

                    b.Navigation("UserTeams");
                });
#pragma warning restore 612, 618
        }
    }
}
